   car_ID  symboling                   CarName  ... citympg highwaympg    price
0       1          3        alfa-romero giulia  ...      21         27  13495.0
1       2          3       alfa-romero stelvio  ...      21         27  16500.0
2       3          1  alfa-romero Quadrifoglio  ...      19         26  16500.0
3       4          2               audi 100 ls  ...      24         30  13950.0
4       5          2                audi 100ls  ...      18         22  17450.0

[5 rows x 26 columns]
(205, 26)
           car_ID   symboling   wheelbase  ...     citympg  highwaympg         price
count  205.000000  205.000000  205.000000  ...  205.000000  205.000000    205.000000
mean   103.000000    0.834146   98.756585  ...   25.219512   30.751220  13276.710571
std     59.322565    1.245307    6.021776  ...    6.542142    6.886443   7988.852332
min      1.000000   -2.000000   86.600000  ...   13.000000   16.000000   5118.000000
25%     52.000000    0.000000   94.500000  ...   19.000000   25.000000   7788.000000
50%    103.000000    1.000000   97.000000  ...   24.000000   30.000000  10295.000000
75%    154.000000    2.000000  102.400000  ...   30.000000   34.000000  16503.000000
max    205.000000    3.000000  120.900000  ...   49.000000   54.000000  45400.000000

[8 rows x 16 columns]
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 205 entries, 0 to 204
Data columns (total 26 columns):
 #   Column            Non-Null Count  Dtype  
---  ------            --------------  -----  
 0   car_ID            205 non-null    int64  
 1   symboling         205 non-null    int64  
 2   CarName           205 non-null    object 
 3   fueltype          205 non-null    object 
 4   aspiration        205 non-null    object 
 5   doornumber        205 non-null    object 
 6   carbody           205 non-null    object 
 7   drivewheel        205 non-null    object 
 8   enginelocation    205 non-null    object 
 9   wheelbase         205 non-null    float64
 10  carlength         205 non-null    float64
 11  carwidth          205 non-null    float64
 12  carheight         205 non-null    float64
 13  curbweight        205 non-null    int64  
 14  enginetype        205 non-null    object 
 15  cylindernumber    205 non-null    object 
 16  enginesize        205 non-null    int64  
 17  fuelsystem        205 non-null    object 
 18  boreratio         205 non-null    float64
 19  stroke            205 non-null    float64
 20  compressionratio  205 non-null    float64
 21  horsepower        205 non-null    int64  
 22  peakrpm           205 non-null    int64  
 23  citympg           205 non-null    int64  
 24  highwaympg        205 non-null    int64  
 25  price             205 non-null    float64
dtypes: float64(8), int64(8), object(10)
memory usage: 41.8+ KB
None
   car_ID  symboling  CompanyName  ... citympg highwaympg    price
0       1          3  alfa-romero  ...      21         27  13495.0
1       2          3  alfa-romero  ...      21         27  16500.0
2       3          1  alfa-romero  ...      19         26  16500.0
3       4          2         audi  ...      24         30  13950.0
4       5          2         audi  ...      18         22  17450.0

[5 rows x 26 columns]
['alfa-romero' 'audi' 'bmw' 'chevrolet' 'dodge' 'honda' 'isuzu' 'jaguar'
 'maxda' 'mazda' 'buick' 'mercury' 'mitsubishi' 'Nissan' 'nissan'
 'peugeot' 'plymouth' 'porsche' 'porcshce' 'renault' 'saab' 'subaru'
 'toyota' 'toyouta' 'vokswagen' 'volkswagen' 'vw' 'volvo']
['alfa-romero' 'audi' 'bmw' 'chevrolet' 'dodge' 'honda' 'isuzu' 'jaguar'
 'mazda' 'buick' 'mercury' 'mitsubishi' 'nissan' 'peugeot' 'plymouth'
 'porsche' 'renault' 'saab' 'subaru' 'toyota' 'volkswagen' 'volvo']
Empty DataFrame
Columns: [car_ID, symboling, CompanyName, fueltype, aspiration, doornumber, carbody, drivewheel, enginelocation, wheelbase, carlength, carwidth, carheight, curbweight, enginetype, cylindernumber, enginesize, fuelsystem, boreratio, stroke, compressionratio, horsepower, peakrpm, citympg, highwaympg, price]
Index: []
Index(['car_ID', 'symboling', 'CompanyName', 'fueltype', 'aspiration',
       'doornumber', 'carbody', 'drivewheel', 'enginelocation', 'wheelbase',
       'carlength', 'carwidth', 'carheight', 'curbweight', 'enginetype',
       'cylindernumber', 'enginesize', 'fuelsystem', 'boreratio', 'stroke',
       'compressionratio', 'horsepower', 'peakrpm', 'citympg', 'highwaympg',
       'price'],
      dtype='object')
Warning: QT_DEVICE_PIXEL_RATIO is deprecated. Instead use:
   QT_AUTO_SCREEN_SCALE_FACTOR to enable platform plugin controlled per-screen factors.
   QT_SCREEN_SCALE_FACTORS to set per-screen DPI.
   QT_SCALE_FACTOR to set the application global scale factor.
None
count      205.000000
mean     13276.710571
std       7988.852332
min       5118.000000
25%       7788.000000
50%      10295.000000
75%      16503.000000
85%      18500.000000
90%      22563.000000
100%     45400.000000
max      45400.000000
Name: price, dtype: float64
None
None
AxesSubplot(0.125,0.11;0.775x0.77)
None
AxesSubplot(0.125,0.11;0.775x0.77)
None
AxesSubplot(0.125,0.11;0.775x0.77)
None
None
None
None
None
None
None
None
0.841118268481846
   car_ID  symboling  CompanyName  ...  price fueleconomy carsrange
0       1          3  alfa-romero  ...  13495       23.70    Medium
1       2          3  alfa-romero  ...  16500       23.70    Medium
2       3          1  alfa-romero  ...  16500       22.15    Medium
3       4          2         audi  ...  13950       26.70    Medium
4       5          2         audi  ...  17450       19.80    Medium

[5 rows x 28 columns]
None
None
AxesSubplot(0.125,0.11;0.775x0.77)
None
   price fueltype aspiration  ... carlength carwidth  carsrange
0  13495      gas        std  ...     168.8     64.1     Medium
1  16500      gas        std  ...     168.8     64.1     Medium
2  16500      gas        std  ...     171.2     65.5     Medium
3  13950      gas        std  ...     176.6     66.2     Medium
4  17450      gas        std  ...     176.6     66.4     Medium

[5 rows x 16 columns]
None
   price  wheelbase  curbweight  enginesize  ...  twelve  two  Medium  Highend
0  13495       88.6        2548         130  ...       0    0       1        0
1  16500       88.6        2548         130  ...       0    0       1        0
2  16500       94.5        2823         152  ...       0    0       1        0
3  13950       99.8        2337         109  ...       0    0       1        0
4  17450       99.4        2824         136  ...       0    0       1        0

[5 rows x 31 columns]
(205, 31)
        price  wheelbase  curbweight  enginesize  ...  twelve  two  Medium  Highend
122  0.068818   0.244828    0.272692    0.139623  ...       0    0       0        0
125  0.466890   0.272414    0.500388    0.339623  ...       0    0       0        1
166  0.122110   0.272414    0.314973    0.139623  ...       0    0       0        0
1    0.314446   0.068966    0.411171    0.260377  ...       0    0       1        0
199  0.382131   0.610345    0.647401    0.260377  ...       0    0       1        0

[5 rows x 31 columns]
            price   wheelbase  curbweight  ...         two      Medium     Highend
count  143.000000  143.000000  143.000000  ...  143.000000  143.000000  143.000000
mean     0.219309    0.411141    0.407878  ...    0.027972    0.412587    0.118881
std      0.215682    0.205581    0.211269  ...    0.165472    0.494030    0.324786
min      0.000000    0.000000    0.000000  ...    0.000000    0.000000    0.000000
25%      0.067298    0.272414    0.245539  ...    0.000000    0.000000    0.000000
50%      0.140343    0.341379    0.355702  ...    0.000000    0.000000    0.000000
75%      0.313479    0.503448    0.559542  ...    0.000000    1.000000    0.000000
max      1.000000    1.000000    1.000000  ...    1.000000    1.000000    1.000000

[8 rows x 31 columns]
None

Process finished with exit code 0
